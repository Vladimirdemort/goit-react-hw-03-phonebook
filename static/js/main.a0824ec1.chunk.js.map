{"version":3,"sources":["components/InputArea/InputArea.js","components/Contacts/Contacts.js","components/Section.js","components/Filter/Filter.js","App.js","index.js","components/Contacts/Contacts.module.css","components/InputArea/InputArea.module.css"],"names":["InputArea","state","name","number","contactSubmit","e","preventDefault","props","onSubmit","reset","writeContact","event","target","value","setState","className","styles","inputForm","this","inputArea","type","onChange","pattern","title","required","React","Component","Contacts","contactData","onContactDelete","map","contact","contacts__item","contacts__name","contacts__number","contacts__btn","onClick","id","Section","children","Filter","filterValue","filter","console","dir","uuidv4","App","contacts","formSubmit","data","friendName","some","alert","setContact","push","log","localStorage","setItem","JSON","stringify","nameFilter","filteredList","toLowerCaseFilter","toLowerCase","includes","deleteItem","prev","parsedContacts","parse","getItem","prevProps","prevState","filterSearch","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a0824ec1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './InputArea.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputArea extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  contactSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  writeContact = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.inputForm} onSubmit={this.contactSubmit}>\r\n        <label>\r\n          {' '}\r\n          Name\r\n          <input\r\n            className={styles.inputArea}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.writeContact}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          {' '}\r\n          Number\r\n          <input\r\n            className={styles.inputArea}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.writeContact}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputArea;\r\n\r\nInputArea.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nexport default function Contacts({ contactData, onContactDelete }) {\r\n  return (\r\n    <ul>\r\n      {contactData.map(contact => (\r\n        <li className={styles.contacts__item} key={contact.id}>\r\n          <p className={styles.contacts__name}>{contact.name}</p>\r\n          <span className={styles.contacts__number}>{contact.number}</span>\r\n          <button\r\n            className={styles.contacts__btn}\r\n            type=\"button\"\r\n            onClick={() => onContactDelete(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contactData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  ),\r\n  onContactDelete: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ filterValue, filter }) {\r\n  return (\r\n    <div>\r\n      <label>\r\n        {' '}\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={e => {\r\n            filter(e.target);\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string,\r\n  filter: PropTypes.func,\r\n};\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport InputArea from 'components/InputArea/InputArea';\r\nimport Contacts from 'components/Contacts/Contacts';\r\nimport Section from 'components/Section';\r\nimport Filter from 'components/Filter/Filter';\r\n\r\nconsole.dir(uuidv4());\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  formSubmit = data => {\r\n    const friendName = data.name;\r\n    if (this.state.contacts.some(({ name }) => name === friendName)) {\r\n      alert(`${friendName} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    data.id = uuidv4();\r\n    const setContact = this.state.contacts;\r\n\r\n    setContact.push(data);\r\n    console.log(data);\r\n    this.setState({\r\n      contacts: setContact,\r\n    });\r\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  };\r\n\r\n  nameFilter = e => {\r\n    this.setState({\r\n      filter: e.value,\r\n    });\r\n  };\r\n\r\n  filteredList = () => {\r\n    const { contacts, filter } = this.state;\r\n    const toLowerCaseFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(toLowerCaseFilter);\r\n    });\r\n  };\r\n\r\n  deleteItem = e => {\r\n    console.log(e);\r\n    this.setState(prev => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== e),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    this.setState({\r\n      contacts: parsedContacts,\r\n    });\r\n    console.log(parsedContacts);\r\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(prevState);\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const filterSearch = this.filteredList();\r\n\r\n    return (\r\n      <>\r\n        <Section title={'Phonebok'}>\r\n          <InputArea onSubmit={this.formSubmit} />\r\n        </Section>\r\n        <Section title={'Contacts'}>\r\n          <Filter filter={this.nameFilter} filterValue={this.state.filter} />\r\n          <Contacts\r\n            contactData={filterSearch}\r\n            onContactDelete={this.deleteItem}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"Contacts_contacts__item__3RV30\",\"contacts__name\":\"Contacts_contacts__name__7ST15\",\"contacts__number\":\"Contacts_contacts__number__1-wyG\",\"contacts__btn\":\"Contacts_contacts__btn__3HDF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"InputArea_inputForm__1SXFK\",\"inputArea\":\"InputArea_inputArea__3sBG_\"};"],"sourceRoot":""}